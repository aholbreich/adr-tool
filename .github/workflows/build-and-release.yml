name: Build and Release ADR Tool RPM

permissions:
  contents: write

on:
  push:
    branches:
      - main
  release:
    types:
      - created

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

        # Set up Go
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: "1.22"

      #   # Cache Go modules
      # - name: Cache Go modules
      #   uses: actions/cache@v4
      #   with:
      #     path: |
      #       ~/go/pkg/mod
      #     #           ~/.cache/go-build
      #     key: ${{ runner.os }}-go-${{ hashFiles('**/go.mod') }}
      #     restore-keys: |
      #       ${{ runner.os }}-go-

      # Cache apt dependencies
      - name: Cache APT dependencies
        uses: actions/cache@v4
        with:
          path: /tmp/apt-cache
          key: ${{ runner.os }}-apt-${{ hashFiles('**/apt-get.lock') }}
          restore-keys: |
            ${{ runner.os }}-apt-

        # Install needed dependencies
      - name: Install build dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y rpm golang ruby ruby-dev

      # Install fpm
      - name: Install fpm
        run: |
          sudo gem install --no-document fpm

        # Run Go tests
      - name: Run Go tests
        run: |
          go test ./...

      # Get version dynamically from Git tag
      - name: Determine Version
        run: |

          COMMIT=$(git rev-parse --short HEAD)
          # Try to get the latest tag
          VERSION=$(git describe --tags --abbrev=0 || echo "No tags found")

          if [ "$VERSION" == "No tags found" ]; then
            echo "No tags found, using commit hash instead"
            VERSION=${COMMIT}
          fi

          echo "VERSION=${VERSION}" >> $GITHUB_ENV
          echo "COMMIT=${COMMIT}" >> $GITHUB_ENV

          echo "COUNT=$(git rev-list $(git describe --tags --abbrev=0)..HEAD --count)" >> $GITHUB_ENV

          echo "Version set to: ${VERSION}, COUNT=${COUNT}, COMMIT=${COMMIT}"
        shell: /usr/bin/bash -e {0}

        # Build ADR tool with version information
      - name: Build ADR tool
        run: |
          go build -ldflags "-X main.version=${VERSION}"  -o adr ./

        # Create tarball dynamically with version
      - name: Create tarball
        run: |
          tar -czf adr-tool-${VERSION}.tar.gz adr
        # Some reference: https://fpm.readthedocs.io/en/latest/cli-reference.html
      - name: Build RPM Package
        run: |
          fpm --version ${VERSION} --iteration "${COUNT}.${COMMIT}" -s dir adr

      - name: Push RPM updates to RPM Repository
        run: |
          git clone https://github.com/aholbreich/rpm-repo.git
          cd rpm-repo
          cp ../*.rpm .   # Copy new RPMs to the repo
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add .
          git commit -m "Update RPM repository metadata"
          git push https://x-access-token:${{ secrets.RPM_REPO_PAT }}@github.com/aholbreich/rpm-repo.git
        env:
          GITHUB_TOKEN: ${{ secrets.RPM_REPO_PAT }}
