name: Build and Release ADR Tool RPM

permissions:
  contents: write

on:
  push:
    branches:
      - main
  release:
    types:
      - created

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v2

        # Set up Go
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: "1.22"

        # Cache Go modules
      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/go/pkg/mod
          #           ~/.cache/go-build
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.mod') }}
          restore-keys: |
            ${{ runner.os }}-go-

        # Install RPM build dependencies
      - name: Install build dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y rpm golang

        # Run Go tests
      - name: Run Go tests
        run: |
          go test ./...

      # Get version dynamically from Git tag
      - name: Determine Version
        run: echo "VERSION=$(git describe --tags --abbrev=0)" >> $GITHUB_ENV

        # Build ADR tool with version information
      - name: Build ADR tool
        run: |
          go build -ldflags "-X main.version=${VERSION}"  -o adr ./

        # Create tarball dynamically with version
      - name: Create tarball
        run: |
          tar -czf adr-tool-${VERSION}.tar.gz adr

      - name: Build RPM Package
        run: |
          fpm -s dir -t rpm -n adr -v ${VERSION} --prefix /usr/local/bin adr --description "ADR-Tool - A command-line tool for managing Architecture Decision Records (ADR)." \
              --url "https://github.com/aholbreich/adr-tool" \
              --maintainer "alexander@holbreich.org" \
              --vendor "alexander.holbreich.org" \
              --category "Development/Tools"

      - name: Push RPM updates to RPM Repository
        run: |
          git clone https://github.com/aholbreich/rpm-repo.git
            cd rpm-repo
            cp ../*.rpm .   # Copy new RPMs to the repo
            createrepo .  # Rebuild metadata
            git config --global user.name "github-actions[bot]"
            git config --global user.email "github-actions[bot]@users.noreply.github.com"
            git add .
            git commit -m "Update RPM repository metadata"
            git push https://github.com/aholbreich/rpm-repo.git
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
